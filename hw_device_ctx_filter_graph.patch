From c4d8a50decb43237dcec665d0ac87d1029f8c66e Mon Sep 17 00:00:00 2001
From: Ubuntu <ubuntu@ip-10-109-116-222.eu-west-1.compute.internal>
Date: Thu, 24 Aug 2023 12:43:44 +0000
Subject: [PATCH] Use existing hw_device_ctx when creating graph filter

---
 doc/examples/decode_filter_audio.c |  2 +-
 doc/examples/decode_filter_video.c |  2 +-
 doc/examples/transcode.c           |  2 +-
 fftools/ffplay.c                   |  2 +-
 libavdevice/lavfi.c                |  2 +-
 libavfilter/avfilter.h             |  3 +++
 libavfilter/graphparser.c          | 16 +++++++++++++++-
 libavfilter/vf_hwupload_cuda.c     | 14 ++++++++++----
 tools/uncoded_frame.c              |  2 +-
 9 files changed, 34 insertions(+), 11 deletions(-)

diff --git a/doc/examples/decode_filter_audio.c b/doc/examples/decode_filter_audio.c
index 2046419819..f7c47e3781 100644
--- a/doc/examples/decode_filter_audio.c
+++ b/doc/examples/decode_filter_audio.c
@@ -178,7 +178,7 @@ static int init_filters(const char *filters_descr)
     inputs->next       = NULL;

     if ((ret = avfilter_graph_parse_ptr(filter_graph, filters_descr,
-                                        &inputs, &outputs, NULL)) < 0)
+                                        &inputs, &outputs, NULL, NULL)) < 0)
         goto end;

     if ((ret = avfilter_graph_config(filter_graph, NULL)) < 0)
diff --git a/doc/examples/decode_filter_video.c b/doc/examples/decode_filter_video.c
index 454c19222f..164ad08873 100644
--- a/doc/examples/decode_filter_video.c
+++ b/doc/examples/decode_filter_video.c
@@ -163,7 +163,7 @@ static int init_filters(const char *filters_descr)
     inputs->next       = NULL;

     if ((ret = avfilter_graph_parse_ptr(filter_graph, filters_descr,
-                                    &inputs, &outputs, NULL)) < 0)
+                                    &inputs, &outputs, NULL, NULL)) < 0)
         goto end;

     if ((ret = avfilter_graph_config(filter_graph, NULL)) < 0)
diff --git a/doc/examples/transcode.c b/doc/examples/transcode.c
index 305181663c..87fdcf1a35 100644
--- a/doc/examples/transcode.c
+++ b/doc/examples/transcode.c
@@ -373,7 +373,7 @@ static int init_filter(FilteringContext* fctx, AVCodecContext *dec_ctx,
     }

     if ((ret = avfilter_graph_parse_ptr(filter_graph, filter_spec,
-                    &inputs, &outputs, NULL)) < 0)
+                    &inputs, &outputs, NULL, NULL)) < 0)
         goto end;

     if ((ret = avfilter_graph_config(filter_graph, NULL)) < 0)
diff --git a/fftools/ffplay.c b/fftools/ffplay.c
index 5212ad053e..59d1acd1bf 100644
--- a/fftools/ffplay.c
+++ b/fftools/ffplay.c
@@ -1803,7 +1803,7 @@ static int configure_filtergraph(AVFilterGraph *graph, const char *filtergraph,
         inputs->pad_idx     = 0;
         inputs->next        = NULL;

-        if ((ret = avfilter_graph_parse_ptr(graph, filtergraph, &inputs, &outputs, NULL)) < 0)
+        if ((ret = avfilter_graph_parse_ptr(graph, filtergraph, &inputs, &outputs, NULL, NULL)) < 0)
             goto fail;
     } else {
         if ((ret = avfilter_link(source_ctx, 0, sink_ctx, 0)) < 0)
diff --git a/libavdevice/lavfi.c b/libavdevice/lavfi.c
index b2cec0400b..e95cba0918 100644
--- a/libavdevice/lavfi.c
+++ b/libavdevice/lavfi.c
@@ -145,7 +145,7 @@ av_cold static int lavfi_read_header(AVFormatContext *avctx)
         FAIL(AVERROR(ENOMEM));

     if ((ret = avfilter_graph_parse_ptr(lavfi->graph, lavfi->graph_str,
-                                    &input_links, &output_links, avctx)) < 0)
+                                    &input_links, &output_links, NULL, avctx)) < 0)
         goto end;

     if (input_links) {
diff --git a/libavfilter/avfilter.h b/libavfilter/avfilter.h
index d69381aed4..405449e3b1 100644
--- a/libavfilter/avfilter.h
+++ b/libavfilter/avfilter.h
@@ -1085,10 +1085,13 @@ int avfilter_graph_parse(AVFilterGraph *graph, const char *filters,
  * @param outputs pointer to a linked list to the outputs of the graph, may be NULL.
  *                If non-NULL, *outputs is updated to contain the list of open outputs
  *                after the parsing, should be freed with avfilter_inout_free().
+ * @param hwdevice_ctx a pointer to a hw device context that should be shared among all filters
+ *                     in the filter graph
  * @return non negative on success, a negative AVERROR code on error
  */
 int avfilter_graph_parse_ptr(AVFilterGraph *graph, const char *filters,
                              AVFilterInOut **inputs, AVFilterInOut **outputs,
+                             AVBufferRef* hwdevice_ctx,
                              void *log_ctx);

 /**
diff --git a/libavfilter/graphparser.c b/libavfilter/graphparser.c
index 96ef6b15bf..5fe250eb7c 100644
--- a/libavfilter/graphparser.c
+++ b/libavfilter/graphparser.c
@@ -917,7 +917,7 @@ int avfilter_graph_segment_apply(AVFilterGraphSegment *seg, int flags,

 int avfilter_graph_parse_ptr(AVFilterGraph *graph, const char *filters,
                          AVFilterInOut **open_inputs_ptr, AVFilterInOut **open_outputs_ptr,
-                         void *log_ctx)
+                         AVBufferRef* hw_device, void *log_ctx)
 {
     AVFilterInOut *user_inputs  = open_inputs_ptr  ? *open_inputs_ptr  : NULL;
     AVFilterInOut *user_outputs = open_outputs_ptr ? *open_outputs_ptr : NULL;
@@ -936,6 +936,20 @@ int avfilter_graph_parse_ptr(AVFilterGraph *graph, const char *filters,
     if (ret < 0)
         goto end;

+     if (hw_device) {
+        for (int i = 0; i < graph->nb_filters; i++) {
+            AVFilterContext *f = graph->filters[i];
+
+            if (!(f->filter->flags_internal & FF_FILTER_FLAG_HWFRAME_AWARE))
+                continue;
+            f->hw_device_ctx = av_buffer_ref(hw_device);
+            if (!f->hw_device_ctx) {
+                ret = AVERROR(ENOMEM);
+                goto end;
+            }
+        }
+    }
+
     ret = avfilter_graph_segment_apply_opts(seg, 0);
     if (ret < 0) {
         if (ret == AVERROR_OPTION_NOT_FOUND)
diff --git a/libavfilter/vf_hwupload_cuda.c b/libavfilter/vf_hwupload_cuda.c
index f5fe3ddbbe..72f00a2580 100644
--- a/libavfilter/vf_hwupload_cuda.c
+++ b/libavfilter/vf_hwupload_cuda.c
@@ -37,11 +37,17 @@ typedef struct CudaUploadContext {
 static av_cold int cudaupload_init(AVFilterContext *ctx)
 {
     CudaUploadContext *s = ctx->priv;
-    char buf[64] = { 0 };

-    snprintf(buf, sizeof(buf), "%d", s->device_idx);
+    if (ctx->hw_device_ctx) {
+        s->hwdevice = av_buffer_ref(ctx->hw_device_ctx);
+        return 0;
+    } else {
+        char buf[64] = { 0 };
+
+        snprintf(buf, sizeof(buf), "%d", s->device_idx);

-    return av_hwdevice_ctx_create(&s->hwdevice, AV_HWDEVICE_TYPE_CUDA, buf, NULL, 0);
+        return av_hwdevice_ctx_create(&s->hwdevice, AV_HWDEVICE_TYPE_CUDA, buf, NULL, 0);
+    }
 }

 static av_cold void cudaupload_uninit(AVFilterContext *ctx)
@@ -196,5 +202,5 @@ const AVFilter ff_vf_hwupload_cuda = {

     FILTER_QUERY_FUNC(cudaupload_query_formats),

-    .flags_internal = FF_FILTER_FLAG_HWFRAME_AWARE,
+    .flags_internal = FF_FILTER_FLAG_HWFRAME_AWARE && AVFILTER_FLAG_HWDEVICE,
 };
diff --git a/tools/uncoded_frame.c b/tools/uncoded_frame.c
index edea2367c4..dd03fefe0d 100644
--- a/tools/uncoded_frame.c
+++ b/tools/uncoded_frame.c
@@ -72,7 +72,7 @@ int main(int argc, char **argv)
                av_err2str(ret));
         goto fail;
     }
-    ret = avfilter_graph_parse_ptr(in_graph, in_graph_desc, NULL, NULL, NULL);
+    ret = avfilter_graph_parse_ptr(in_graph, in_graph_desc, NULL, NULL, NULL, NULL);
     if (ret < 0) {
         av_log(NULL, AV_LOG_ERROR, "Unable to parse graph: %s\n",
                av_err2str(ret));
--
2.25.1
